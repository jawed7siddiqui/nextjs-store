{"ast":null,"code":"import React,{Fragment}from\"react\";import{connect}from\"react-redux\";import{getProducts}from\"../../helpers/product\";import ProductGridSingleEight from\"../../components/product/ProductGridSingleEight\";import{addToCart as _addToCart}from\"../../redux/actions/cartActions\";import{addToWishlist as _addToWishlist}from\"../../redux/actions/wishlistActions\";import{addToCompare as _addToCompare}from\"../../redux/actions/compareActions\";var ProductGridEight=function ProductGridEight(_ref){var products=_ref.products,currency=_ref.currency,addToCart=_ref.addToCart,addToWishlist=_ref.addToWishlist,addToCompare=_ref.addToCompare,cartItems=_ref.cartItems,wishlistItems=_ref.wishlistItems,compareItems=_ref.compareItems,sliderClassName=_ref.sliderClassName,spaceBottomClass=_ref.spaceBottomClass,colorClass=_ref.colorClass;return/*#__PURE__*/React.createElement(Fragment,null,products.map(function(product){return/*#__PURE__*/React.createElement(ProductGridSingleEight,{sliderClassName:sliderClassName,spaceBottomClass:spaceBottomClass,colorClass:colorClass,product:product,currency:currency,addToCart:addToCart,addToWishlist:addToWishlist,addToCompare:addToCompare,cartItem:cartItems.filter(function(cartItem){return cartItem.id===product.id;})[0],wishlistItem:wishlistItems.filter(function(wishlistItem){return wishlistItem.id===product.id;})[0],compareItem:compareItems.filter(function(compareItem){return compareItem.id===product.id;})[0],key:product.id});}));};var mapStateToProps=function mapStateToProps(state,ownProps){return{products:getProducts(state.productData.products,ownProps.category,ownProps.type,ownProps.limit),currency:state.currencyData,cartItems:state.cartData,wishlistItems:state.wishlistData,compareItems:state.compareData};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addToCart:function addToCart(item,addToast,quantityCount,selectedProductColor,selectedProductSize){dispatch(_addToCart(item,addToast,quantityCount,selectedProductColor,selectedProductSize));},addToWishlist:function addToWishlist(item,addToast){dispatch(_addToWishlist(item,addToast));},addToCompare:function addToCompare(item,addToast){dispatch(_addToCompare(item,addToast));}};};export default connect(mapStateToProps,mapDispatchToProps)(ProductGridEight);","map":{"version":3,"sources":["/var/www/html/Client/India/adysoft/nextjs-ecommerce/src/wrappers/product/ProductGridEight.js"],"names":["React","Fragment","connect","getProducts","ProductGridSingleEight","addToCart","addToWishlist","addToCompare","ProductGridEight","products","currency","cartItems","wishlistItems","compareItems","sliderClassName","spaceBottomClass","colorClass","map","product","filter","cartItem","id","wishlistItem","compareItem","mapStateToProps","state","ownProps","productData","category","type","limit","currencyData","cartData","wishlistData","compareData","mapDispatchToProps","dispatch","item","addToast","quantityCount","selectedProductColor","selectedProductSize"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProducts } from \"../../helpers/product\";\r\nimport ProductGridSingleEight from \"../../components/product/ProductGridSingleEight\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport { addToWishlist } from \"../../redux/actions/wishlistActions\";\r\nimport { addToCompare } from \"../../redux/actions/compareActions\";\r\n\r\nconst ProductGridEight = ({\r\n  products,\r\n  currency,\r\n  addToCart,\r\n  addToWishlist,\r\n  addToCompare,\r\n  cartItems,\r\n  wishlistItems,\r\n  compareItems,\r\n  sliderClassName,\r\n  spaceBottomClass,\r\n  colorClass\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {products.map((product) => {\r\n        return (\r\n          <ProductGridSingleEight\r\n            sliderClassName={sliderClassName}\r\n            spaceBottomClass={spaceBottomClass}\r\n            colorClass={colorClass}\r\n            product={product}\r\n            currency={currency}\r\n            addToCart={addToCart}\r\n            addToWishlist={addToWishlist}\r\n            addToCompare={addToCompare}\r\n            cartItem={\r\n              cartItems.filter((cartItem) => cartItem.id === product.id)[0]\r\n            }\r\n            wishlistItem={\r\n              wishlistItems.filter(\r\n                (wishlistItem) => wishlistItem.id === product.id\r\n              )[0]\r\n            }\r\n            compareItem={\r\n              compareItems.filter(\r\n                (compareItem) => compareItem.id === product.id\r\n              )[0]\r\n            }\r\n            key={product.id}\r\n          />\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductGridEight.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  addToCompare: PropTypes.func,\r\n  addToWishlist: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  compareItems: PropTypes.array,\r\n  currency: PropTypes.object,\r\n  products: PropTypes.array,\r\n  sliderClassName: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  colorClass: PropTypes.string,\r\n  wishlistItems: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    products: getProducts(\r\n      state.productData.products,\r\n      ownProps.category,\r\n      ownProps.type,\r\n      ownProps.limit\r\n    ),\r\n    currency: state.currencyData,\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    compareItems: state.compareData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (\r\n      item,\r\n      addToast,\r\n      quantityCount,\r\n      selectedProductColor,\r\n      selectedProductSize\r\n    ) => {\r\n      dispatch(\r\n        addToCart(\r\n          item,\r\n          addToast,\r\n          quantityCount,\r\n          selectedProductColor,\r\n          selectedProductSize\r\n        )\r\n      );\r\n    },\r\n    addToWishlist: (item, addToast) => {\r\n      dispatch(addToWishlist(item, addToast));\r\n    },\r\n    addToCompare: (item, addToast) => {\r\n      dispatch(addToCompare(item, addToast));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGridEight);\r\n"]},"metadata":{},"sourceType":"module"}