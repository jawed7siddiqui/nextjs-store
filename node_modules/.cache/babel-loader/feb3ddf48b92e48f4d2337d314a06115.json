{"ast":null,"code":"import React from\"react\";import MailchimpSubscribe from\"react-mailchimp-subscribe\";var CustomForm=function CustomForm(_ref){var status=_ref.status,message=_ref.message,onValidated=_ref.onValidated,spaceTopClass=_ref.spaceTopClass,subscribeBtnClass=_ref.subscribeBtnClass;var email;var submit=function submit(){email&&email.value.indexOf(\"@\")>-1&&onValidated({EMAIL:email.value});email.value=\"\";};return/*#__PURE__*/React.createElement(\"div\",{className:\"subscribe-form-3 \".concat(spaceTopClass?spaceTopClass:\"\")},/*#__PURE__*/React.createElement(\"div\",{className:\"mc-form\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{className:\"email\",ref:function ref(node){return email=node;},type:\"email\",placeholder:\"Your Email Address\",required:true})),status===\"sending\"&&/*#__PURE__*/React.createElement(\"div\",{style:{color:\"#3498db\",fontSize:\"12px\"}},\"sending...\"),status===\"error\"&&/*#__PURE__*/React.createElement(\"div\",{style:{color:\"#e74c3c\",fontSize:\"12px\"},dangerouslySetInnerHTML:{__html:message}}),status===\"success\"&&/*#__PURE__*/React.createElement(\"div\",{style:{color:\"#2ecc71\",fontSize:\"12px\"},dangerouslySetInnerHTML:{__html:message}}),/*#__PURE__*/React.createElement(\"div\",{className:\"clear-3 \".concat(subscribeBtnClass?subscribeBtnClass:\"\")},/*#__PURE__*/React.createElement(\"button\",{className:\"button\",onClick:submit},\"SUBSCRIBE\"))));};var SubscribeEmailTwo=function SubscribeEmailTwo(_ref2){var mailchimpUrl=_ref2.mailchimpUrl,spaceTopClass=_ref2.spaceTopClass,subscribeBtnClass=_ref2.subscribeBtnClass;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MailchimpSubscribe,{url:mailchimpUrl,render:function render(_ref3){var subscribe=_ref3.subscribe,status=_ref3.status,message=_ref3.message;return/*#__PURE__*/React.createElement(CustomForm,{status:status,message:message,onValidated:function onValidated(formData){return subscribe(formData);},spaceTopClass:spaceTopClass,subscribeBtnClass:subscribeBtnClass});}}));};export default SubscribeEmailTwo;","map":{"version":3,"sources":["/var/www/html/Client/India/adysoft/nextjs-store/src/components/newsletter/SubscribeEmailTwo.js"],"names":["React","MailchimpSubscribe","CustomForm","status","message","onValidated","spaceTopClass","subscribeBtnClass","email","submit","value","indexOf","EMAIL","node","color","fontSize","__html","SubscribeEmailTwo","mailchimpUrl","subscribe","formData"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,2BAA/B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAMb,IALJC,CAAAA,MAKI,MALJA,MAKI,CAJJC,OAII,MAJJA,OAII,CAHJC,WAGI,MAHJA,WAGI,CAFJC,aAEI,MAFJA,aAEI,CADJC,iBACI,MADJA,iBACI,CACJ,GAAIC,CAAAA,KAAJ,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBD,KAAK,EACHA,KAAK,CAACE,KAAN,CAAYC,OAAZ,CAAoB,GAApB,EAA2B,CAAC,CAD9B,EAEEN,WAAW,CAAC,CACVO,KAAK,CAAEJ,KAAK,CAACE,KADH,CAAD,CAFb,CAMAF,KAAK,CAACE,KAAN,CAAc,EAAd,CACD,CARD,CAUA,mBACE,2BAAK,SAAS,4BAAsBJ,aAAa,CAAGA,aAAH,CAAmB,EAAtD,CAAd,eACE,2BAAK,SAAS,CAAC,SAAf,eACE,4CACE,6BACE,SAAS,CAAC,OADZ,CAEE,GAAG,CAAE,aAAAO,IAAI,QAAKL,CAAAA,KAAK,CAAGK,IAAb,EAFX,CAGE,IAAI,CAAC,OAHP,CAIE,WAAW,CAAC,oBAJd,CAKE,QAAQ,KALV,EADF,CADF,CAUGV,MAAM,GAAK,SAAX,eACC,2BAAK,KAAK,CAAE,CAAEW,KAAK,CAAE,SAAT,CAAoBC,QAAQ,CAAE,MAA9B,CAAZ,eAXJ,CAaGZ,MAAM,GAAK,OAAX,eACC,2BACE,KAAK,CAAE,CAAEW,KAAK,CAAE,SAAT,CAAoBC,QAAQ,CAAE,MAA9B,CADT,CAEE,uBAAuB,CAAE,CAAEC,MAAM,CAAEZ,OAAV,CAF3B,EAdJ,CAmBGD,MAAM,GAAK,SAAX,eACC,2BACE,KAAK,CAAE,CAAEW,KAAK,CAAE,SAAT,CAAoBC,QAAQ,CAAE,MAA9B,CADT,CAEE,uBAAuB,CAAE,CAAEC,MAAM,CAAEZ,OAAV,CAF3B,EApBJ,cAyBE,2BACE,SAAS,mBAAaG,iBAAiB,CAAGA,iBAAH,CAAuB,EAArD,CADX,eAGE,8BAAQ,SAAS,CAAC,QAAlB,CAA2B,OAAO,CAAEE,MAApC,cAHF,CAzBF,CADF,CADF,CAqCD,CAvDD,CAyDA,GAAMQ,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,OAIpB,IAHJC,CAAAA,YAGI,OAHJA,YAGI,CAFJZ,aAEI,OAFJA,aAEI,CADJC,iBACI,OADJA,iBACI,CACJ,mBACE,4CACE,oBAAC,kBAAD,EACE,GAAG,CAAEW,YADP,CAEE,MAAM,CAAE,0BAAGC,CAAAA,SAAH,OAAGA,SAAH,CAAchB,MAAd,OAAcA,MAAd,CAAsBC,OAAtB,OAAsBA,OAAtB,oBACN,oBAAC,UAAD,EACE,MAAM,CAAED,MADV,CAEE,OAAO,CAAEC,OAFX,CAGE,WAAW,CAAE,qBAAAgB,QAAQ,QAAID,CAAAA,SAAS,CAACC,QAAD,CAAb,EAHvB,CAIE,aAAa,CAAEd,aAJjB,CAKE,iBAAiB,CAAEC,iBALrB,EADM,EAFV,EADF,CADF,CAgBD,CArBD,CA4BA,cAAeU,CAAAA,iBAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\n\r\nconst CustomForm = ({\r\n  status,\r\n  message,\r\n  onValidated,\r\n  spaceTopClass,\r\n  subscribeBtnClass\r\n}) => {\r\n  let email;\r\n  const submit = () => {\r\n    email &&\r\n      email.value.indexOf(\"@\") > -1 &&\r\n      onValidated({\r\n        EMAIL: email.value\r\n      });\r\n\r\n    email.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={`subscribe-form-3 ${spaceTopClass ? spaceTopClass : \"\"}`}>\r\n      <div className=\"mc-form\">\r\n        <div>\r\n          <input\r\n            className=\"email\"\r\n            ref={node => (email = node)}\r\n            type=\"email\"\r\n            placeholder=\"Your Email Address\"\r\n            required\r\n          />\r\n        </div>\r\n        {status === \"sending\" && (\r\n          <div style={{ color: \"#3498db\", fontSize: \"12px\" }}>sending...</div>\r\n        )}\r\n        {status === \"error\" && (\r\n          <div\r\n            style={{ color: \"#e74c3c\", fontSize: \"12px\" }}\r\n            dangerouslySetInnerHTML={{ __html: message }}\r\n          />\r\n        )}\r\n        {status === \"success\" && (\r\n          <div\r\n            style={{ color: \"#2ecc71\", fontSize: \"12px\" }}\r\n            dangerouslySetInnerHTML={{ __html: message }}\r\n          />\r\n        )}\r\n        <div\r\n          className={`clear-3 ${subscribeBtnClass ? subscribeBtnClass : \"\"}`}\r\n        >\r\n          <button className=\"button\" onClick={submit}>\r\n            SUBSCRIBE\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SubscribeEmailTwo = ({\r\n  mailchimpUrl,\r\n  spaceTopClass,\r\n  subscribeBtnClass\r\n}) => {\r\n  return (\r\n    <div>\r\n      <MailchimpSubscribe\r\n        url={mailchimpUrl}\r\n        render={({ subscribe, status, message }) => (\r\n          <CustomForm\r\n            status={status}\r\n            message={message}\r\n            onValidated={formData => subscribe(formData)}\r\n            spaceTopClass={spaceTopClass}\r\n            subscribeBtnClass={subscribeBtnClass}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSubscribeEmailTwo.propTypes = {\r\n  mailchimpUrl: PropTypes.string,\r\n  spaceTopClass: PropTypes.string\r\n};\r\n\r\nexport default SubscribeEmailTwo;\r\n"]},"metadata":{},"sourceType":"module"}