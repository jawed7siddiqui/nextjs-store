{"ast":null,"code":"import React from\"react\";import MailchimpSubscribe from\"react-mailchimp-subscribe\";var CustomForm=function CustomForm(_ref){var status=_ref.status,message=_ref.message,onValidated=_ref.onValidated;var email;var submit=function submit(){email&&email.value.indexOf(\"@\")>-1&&onValidated({EMAIL:email.value});email.value=\"\";};return/*#__PURE__*/React.createElement(\"div\",{className:\"subscribe-form-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mc-form\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{className:\"email\",ref:function ref(node){return email=node;},type:\"email\",placeholder:\"Your Email Address\",required:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"clear-2\"},/*#__PURE__*/React.createElement(\"button\",{className:\"button\",onClick:submit},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-long-arrow-right\"})))),status===\"sending\"&&/*#__PURE__*/React.createElement(\"div\",{style:{color:\"#3498db\",fontSize:\"12px\"}},\"sending...\"),status===\"error\"&&/*#__PURE__*/React.createElement(\"div\",{style:{color:\"#e74c3c\",fontSize:\"12px\"},dangerouslySetInnerHTML:{__html:message}}),status===\"success\"&&/*#__PURE__*/React.createElement(\"div\",{style:{color:\"#2ecc71\",fontSize:\"12px\"},dangerouslySetInnerHTML:{__html:message}}));};var SubscribeEmail=function SubscribeEmail(_ref2){var mailchimpUrl=_ref2.mailchimpUrl;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(MailchimpSubscribe,{url:mailchimpUrl,render:function render(_ref3){var subscribe=_ref3.subscribe,status=_ref3.status,message=_ref3.message;return/*#__PURE__*/React.createElement(CustomForm,{status:status,message:message,onValidated:function onValidated(formData){return subscribe(formData);}});}}));};export default SubscribeEmail;","map":{"version":3,"sources":["/var/www/html/Client/India/adysoft/nextjs-ecommerce/src/components/newsletter/SubscribeEmail.js"],"names":["React","MailchimpSubscribe","CustomForm","status","message","onValidated","email","submit","value","indexOf","EMAIL","node","color","fontSize","__html","SubscribeEmail","mailchimpUrl","subscribe","formData"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,2BAA/B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAsC,IAAnCC,CAAAA,MAAmC,MAAnCA,MAAmC,CAA3BC,OAA2B,MAA3BA,OAA2B,CAAlBC,WAAkB,MAAlBA,WAAkB,CACvD,GAAIC,CAAAA,KAAJ,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBD,KAAK,EACHA,KAAK,CAACE,KAAN,CAAYC,OAAZ,CAAoB,GAApB,EAA2B,CAAC,CAD9B,EAEEJ,WAAW,CAAC,CACVK,KAAK,CAAEJ,KAAK,CAACE,KADH,CAAD,CAFb,CAKAF,KAAK,CAACE,KAAN,CAAc,EAAd,CACD,CAPD,CASA,mBACE,2BAAK,SAAS,CAAC,kBAAf,eACE,2BAAK,SAAS,CAAC,SAAf,eACE,4CACE,6BACE,SAAS,CAAC,OADZ,CAEE,GAAG,CAAE,aAAAG,IAAI,QAAKL,CAAAA,KAAK,CAAGK,IAAb,EAFX,CAGE,IAAI,CAAC,OAHP,CAIE,WAAW,CAAC,oBAJd,CAKE,QAAQ,KALV,EADF,CADF,cAUE,2BAAK,SAAS,CAAC,SAAf,eACE,8BAAQ,SAAS,CAAC,QAAlB,CAA2B,OAAO,CAAEJ,MAApC,eACE,yBAAG,SAAS,CAAC,wBAAb,EADF,CADF,CAVF,CADF,CAkBGJ,MAAM,GAAK,SAAX,eACC,2BAAK,KAAK,CAAE,CAAES,KAAK,CAAE,SAAT,CAAoBC,QAAQ,CAAE,MAA9B,CAAZ,eAnBJ,CAqBGV,MAAM,GAAK,OAAX,eACC,2BACE,KAAK,CAAE,CAAES,KAAK,CAAE,SAAT,CAAoBC,QAAQ,CAAE,MAA9B,CADT,CAEE,uBAAuB,CAAE,CAAEC,MAAM,CAAEV,OAAV,CAF3B,EAtBJ,CA2BGD,MAAM,GAAK,SAAX,eACC,2BACE,KAAK,CAAE,CAAES,KAAK,CAAE,SAAT,CAAoBC,QAAQ,CAAE,MAA9B,CADT,CAEE,uBAAuB,CAAE,CAAEC,MAAM,CAAEV,OAAV,CAF3B,EA5BJ,CADF,CAoCD,CA/CD,CAiDA,GAAMW,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,OAAsB,IAAnBC,CAAAA,YAAmB,OAAnBA,YAAmB,CAC3C,mBACE,4CACE,oBAAC,kBAAD,EACE,GAAG,CAAEA,YADP,CAEE,MAAM,CAAE,0BAAGC,CAAAA,SAAH,OAAGA,SAAH,CAAcd,MAAd,OAAcA,MAAd,CAAsBC,OAAtB,OAAsBA,OAAtB,oBACN,oBAAC,UAAD,EACE,MAAM,CAAED,MADV,CAEE,OAAO,CAAEC,OAFX,CAGE,WAAW,CAAE,qBAAAc,QAAQ,QAAID,CAAAA,SAAS,CAACC,QAAD,CAAb,EAHvB,EADM,EAFV,EADF,CADF,CAcD,CAfD,CAqBA,cAAeH,CAAAA,cAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\n\r\nconst CustomForm = ({ status, message, onValidated }) => {\r\n  let email;\r\n  const submit = () => {\r\n    email &&\r\n      email.value.indexOf(\"@\") > -1 &&\r\n      onValidated({\r\n        EMAIL: email.value\r\n      });\r\n    email.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"subscribe-form-2\">\r\n      <div className=\"mc-form\">\r\n        <div>\r\n          <input\r\n            className=\"email\"\r\n            ref={node => (email = node)}\r\n            type=\"email\"\r\n            placeholder=\"Your Email Address\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"clear-2\">\r\n          <button className=\"button\" onClick={submit}>\r\n            <i className=\"fa fa-long-arrow-right\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {status === \"sending\" && (\r\n        <div style={{ color: \"#3498db\", fontSize: \"12px\" }}>sending...</div>\r\n      )}\r\n      {status === \"error\" && (\r\n        <div\r\n          style={{ color: \"#e74c3c\", fontSize: \"12px\" }}\r\n          dangerouslySetInnerHTML={{ __html: message }}\r\n        />\r\n      )}\r\n      {status === \"success\" && (\r\n        <div\r\n          style={{ color: \"#2ecc71\", fontSize: \"12px\" }}\r\n          dangerouslySetInnerHTML={{ __html: message }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SubscribeEmail = ({ mailchimpUrl }) => {\r\n  return (\r\n    <div>\r\n      <MailchimpSubscribe\r\n        url={mailchimpUrl}\r\n        render={({ subscribe, status, message }) => (\r\n          <CustomForm\r\n            status={status}\r\n            message={message}\r\n            onValidated={formData => subscribe(formData)}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSubscribeEmail.propTypes = {\r\n  mailchimpUrl: PropTypes.string\r\n};\r\n\r\nexport default SubscribeEmail;\r\n"]},"metadata":{},"sourceType":"module"}